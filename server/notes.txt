# Bash

- npm init -y 
- npm i fastify // para criar nossa API RESTFUL
- npm  i typescript -D // instala o typescript
- npx tsc --init // cria a config do typescript para o projeto
  - tsconfig -> mudar o target para es2020
- npm i tsx -D // permite executar arquivo typescript
- npm run dev // apos config o script

- npm i -D prisma //ORM
- npm i @prisma/client // client do prisma
- npx prisma init --datasource-provider SQLite // estamos falando que queremos usar o banco de dados do tipo sqlite
- npx prisma migrate dev // depois de criar a tabela em schema.prisma
  - nome da migration: create table habits
- npx prisma studio // para vizualizar o banco de dados
- npm i -D prisma-erd-generator @mermaid-js/mermaid-cli // cria os diagramas
  - dentro de schema.prisma
    generator erd {
      provider = "prisma-erd-generator"
    }
  - npx prisma generate
- npx prisma db seed // rodar o seed

- npm i @fastify/cors // configurando o cors
- npm i zod // validar os dados vindo da requisição -> exmplo: routers.ts
- npm i dayjs // biblioteca para trabalhar com datas

- npm i web-push / push Manager api -> notification push + service Workers
- npm i @types/web-push -D

# Config
package.josn

"scripts": {
    "dev": "tsx watch src/server.ts"
  },

seed = populador de banco de dados com dados ficticios